!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Add	.\Assets\Scripts\CellGrid.cs	/^    public void Add(List<CollabCell> row) {$/;"	m	class:CellGrid
BASE_SCORE	.\Assets\Scripts\CollabCell.cs	/^    public const int BASE_SCORE = 50;$/;"	f	class:CollabCell
BestDirection	.\Assets\Scripts\CellGrid.cs	/^    public Movement.Direction BestDirection(int x, int y) {$/;"	m	class:CellGrid
Build	.\Assets\Scripts\GridManager.cs	/^    public void Build()$/;"	m	class:GridManager
CameraController	.\Assets\Scripts\CameraController.cs	/^public class CameraController : MonoBehaviour {$/;"	c
CanPass	.\Assets\Scripts\CellPassthrough.cs	/^    public bool CanPass() { return _passable; }$/;"	m	class:CellPassthrough
Cell	.\Assets\Scripts\GridManager.cs	/^    public GameObject Cell;$/;"	f	class:GridManager
CellGrid	.\Assets\Scripts\CellGrid.cs	/^    public CellGrid() {$/;"	m	class:CellGrid
CellGrid	.\Assets\Scripts\CellGrid.cs	/^    public CellGrid(List<List<CollabCell> > cells) {$/;"	m	class:CellGrid
CellGrid	.\Assets\Scripts\CellGrid.cs	/^public class CellGrid {$/;"	c
CellPassthrough	.\Assets\Scripts\CellPassthrough.cs	/^public class CellPassthrough : MonoBehaviour {$/;"	c
CollabCell	.\Assets\Scripts\CollabCell.cs	/^    public CollabCell(GameObject cell) {$/;"	m	class:CollabCell
CollabCell	.\Assets\Scripts\CollabCell.cs	/^    public CollabCell(GameObject cell, int score) {$/;"	m	class:CollabCell
CollabCell	.\Assets\Scripts\CollabCell.cs	/^    public CollabCell(GameObject cell, int score, bool pass) {$/;"	m	class:CollabCell
CollabCell	.\Assets\Scripts\CollabCell.cs	/^public class CollabCell {$/;"	c
Coord	.\Assets\Scripts\CellGrid.cs	/^    public Vector3 Coord(int x, int y) {$/;"	m	class:CellGrid
Count	.\Assets\Scripts\CellGrid.cs	/^    public int Count() {$/;"	m	class:CellGrid
DecrementScore	.\Assets\Scripts\CollabCell.cs	/^    void DecrementScore() { --_score; }$/;"	m	class:CollabCell	file:
Direction	.\Assets\Scripts\Movement.cs	/^    public enum Direction { Left, Right, Up, Down };$/;"	g	class:Movement
Down	.\Assets\Scripts\Movement.cs	/^    public enum Direction { Left, Right, Up, Down };$/;"	e	enum:Movement.Direction	file:
Explore	.\Assets\Scripts\PacManAI.cs	/^    enum State { Explore, Hunt, Hide };$/;"	e	enum:PacManAI.State	file:
FaceDirection	.\Assets\Scripts\Movement.cs	/^    public Vector3 FaceDirection(Direction d) {$/;"	m	class:Movement
GenerateMaze	.\Assets\Scripts\Startup.cs	/^    void GenerateMaze() {$/;"	m	class:Startup	file:
GenerateScores	.\Assets\Scripts\NodeScorer.cs	/^    public void GenerateScores(GameObject target) {$/;"	m	class:NodeScorer
GetCellAt	.\Assets\Scripts\NodeScorer.cs	/^    public GameObject GetCellAt(Vector2 location) {$/;"	m	class:NodeScorer
GetCellAt	.\Assets\Scripts\NodeScorer.cs	/^    public GameObject GetCellAt(Vector2 location, int x_low, int x_high, int y_high, int y_low) {$/;"	m	class:NodeScorer
GhostAI	.\Assets\Scripts\GhostAI.cs	/^public class GhostAI : MonoBehaviour {$/;"	c
GridManager	.\Assets\Scripts\GridManager.cs	/^public class GridManager: MonoBehaviour$/;"	c
Ground	.\Assets\Scripts\GridManager.cs	/^    public GameObject Ground;$/;"	f	class:GridManager
Hide	.\Assets\Scripts\PacManAI.cs	/^    enum State { Explore, Hunt, Hide };$/;"	e	enum:PacManAI.State	file:
Hover	.\Assets\Scripts\Hover.cs	/^public class Hover : MonoBehaviour {$/;"	c
Hunt	.\Assets\Scripts\PacManAI.cs	/^    enum State { Explore, Hunt, Hide };$/;"	e	enum:PacManAI.State	file:
IMPASS_SCORE	.\Assets\Scripts\CollabCell.cs	/^    public const int IMPASS_SCORE = int.MinValue;$/;"	f	class:CollabCell
IncrementScore	.\Assets\Scripts\CollabCell.cs	/^    void IncrementScore() { ++_score; }$/;"	m	class:CollabCell	file:
InnerCount	.\Assets\Scripts\CellGrid.cs	/^    public int InnerCount() {$/;"	m	class:CellGrid
LateUpdate	.\Assets\Scripts\CameraController.cs	/^	void LateUpdate () {$/;"	m	class:CameraController	file:
Left	.\Assets\Scripts\Movement.cs	/^    public enum Direction { Left, Right, Up, Down };$/;"	e	enum:Movement.Direction	file:
MAX_SCORE	.\Assets\Scripts\CollabCell.cs	/^    public const int MAX_SCORE = 1000;$/;"	f	class:CollabCell
MIN_SCORE	.\Assets\Scripts\CollabCell.cs	/^    public const int MIN_SCORE = 0;$/;"	f	class:CollabCell
MoveDirection	.\Assets\Scripts\Movement.cs	/^    public Vector3 MoveDirection(Direction d) {$/;"	m	class:Movement
Movement	.\Assets\Scripts\Movement.cs	/^public class Movement : MonoBehaviour { $/;"	c
MovingIn	.\Assets\Scripts\Movement.cs	/^    public Direction MovingIn(Vector3 v) {$/;"	m	class:Movement
NodeScorer	.\Assets\Scripts\NodeScorer.cs	/^public class NodeScorer : MonoBehaviour {$/;"	c
OnGUI	.\Assets\Scripts\PlayerController.cs	/^    void OnGUI() {$/;"	m	class:PlayerController	file:
OnTriggerEnter	.\Assets\Scripts\CellPassthrough.cs	/^    void OnTriggerEnter(Collider other) {$/;"	m	class:CellPassthrough	file:
OnTriggerEnter	.\Assets\Scripts\PlayerController.cs	/^	void OnTriggerEnter(Collider other) {$/;"	m	class:PlayerController	file:
PacManAI	.\Assets\Scripts\PacManAI.cs	/^public class PacManAI : MonoBehaviour {$/;"	c
Pair	.\Assets\Scripts\Pair.cs	/^    public Pair() {$/;"	m	class:Pair
Pair	.\Assets\Scripts\Pair.cs	/^    public Pair(K f, T s) {$/;"	m	class:Pair
Pair	.\Assets\Scripts\Pair.cs	/^public class Pair<K,T> {$/;"	c
PlayerController	.\Assets\Scripts\PlayerController.cs	/^public class PlayerController : MonoBehaviour {$/;"	c
Pos	.\Assets\Scripts\CollabCell.cs	/^    public Vector3 Pos() {$/;"	m	class:CollabCell
Pos	.\Assets\Scripts\NodeScorer.cs	/^    Vector2 Pos(GameObject g) {$/;"	m	class:NodeScorer	file:
RADIUS	.\Assets\Scripts\CellGrid.cs	/^    public const int RADIUS = 5;$/;"	f	class:CellGrid
Right	.\Assets\Scripts\Movement.cs	/^    public enum Direction { Left, Right, Up, Down };$/;"	e	enum:Movement.Direction	file:
ScoreInDirection	.\Assets\Scripts\CellGrid.cs	/^    public int ScoreInDirection(int x, int y, Movement.Direction d) {$/;"	m	class:CellGrid
SetCountText	.\Assets\Scripts\PlayerController.cs	/^	void SetCountText() {$/;"	m	class:PlayerController	file:
SetScore	.\Assets\Scripts\CellGrid.cs	/^    public void SetScore(int x, int y, Movement.Direction d, int score, int distance) {$/;"	m	class:CellGrid
SetScore	.\Assets\Scripts\CellGrid.cs	/^    public void SetScore(int x, int y, int score, int distance) {$/;"	m	class:CellGrid
SetSimpleScore	.\Assets\Scripts\CellGrid.cs	/^    public void SetSimpleScore(int x, int y, int score) {$/;"	m	class:CellGrid
Start	.\Assets\Scripts\CameraController.cs	/^	void Start () {$/;"	m	class:CameraController	file:
Start	.\Assets\Scripts\GhostAI.cs	/^    void Start () {$/;"	m	class:GhostAI	file:
Start	.\Assets\Scripts\Hover.cs	/^	void Start () {$/;"	m	class:Hover	file:
Start	.\Assets\Scripts\NodeScorer.cs	/^    void Start() {$/;"	m	class:NodeScorer	file:
Start	.\Assets\Scripts\PacManAI.cs	/^	void Start () {$/;"	m	class:PacManAI	file:
Start	.\Assets\Scripts\PlayerController.cs	/^	void Start() {$/;"	m	class:PlayerController	file:
Start	.\Assets\Scripts\Startup.cs	/^	void Start () {$/;"	m	class:Startup	file:
Start	.\Assets\Scripts\WallToggle.cs	/^	void Start () {$/;"	m	class:WallToggle	file:
Startup	.\Assets\Scripts\Startup.cs	/^public class Startup : MonoBehaviour {$/;"	c
State	.\Assets\Scripts\PacManAI.cs	/^    enum State { Explore, Hunt, Hide };$/;"	g	class:PacManAI
Up	.\Assets\Scripts\Movement.cs	/^    public enum Direction { Left, Right, Up, Down };$/;"	e	enum:Movement.Direction	file:
Update	.\Assets\Scripts\GhostAI.cs	/^    void Update () {$/;"	m	class:GhostAI	file:
Update	.\Assets\Scripts\Hover.cs	/^	void Update () {$/;"	m	class:Hover	file:
Update	.\Assets\Scripts\PacManAI.cs	/^	void Update () {$/;"	m	class:PacManAI	file:
Update	.\Assets\Scripts\Startup.cs	/^	void Update () {$/;"	m	class:Startup	file:
Update	.\Assets\Scripts\WallToggle.cs	/^	void Update () {$/;"	m	class:WallToggle	file:
WallToggle	.\Assets\Scripts\WallToggle.cs	/^public class WallToggle : MonoBehaviour {$/;"	c
_cell	.\Assets\Scripts\CollabCell.cs	/^    public GameObject _cell;$/;"	f	class:CollabCell
_cells	.\Assets\Scripts\CellGrid.cs	/^    public List<List<CollabCell> > _cells;$/;"	f	class:CellGrid
_cells	.\Assets\Scripts\GridManager.cs	/^    public CellGrid _cells = new CellGrid();$/;"	f	class:GridManager
_cells	.\Assets\Scripts\NodeScorer.cs	/^    private CellGrid _cells;$/;"	f	class:NodeScorer	file:
_count	.\Assets\Scripts\PlayerController.cs	/^	private int _count;$/;"	f	class:PlayerController	file:
_count_text	.\Assets\Scripts\PlayerController.cs	/^	public GUIText _count_text, _win_text;$/;"	f	class:PlayerController
_current_bob	.\Assets\Scripts\Hover.cs	/^    private int _current_bob;$/;"	f	class:Hover	file:
_direction	.\Assets\Scripts\GhostAI.cs	/^    private Movement.Direction _direction;$/;"	f	class:GhostAI	file:
_direction	.\Assets\Scripts\PacManAI.cs	/^    private Movement.Direction _direction;$/;"	f	class:PacManAI	file:
_floor	.\Assets\Scripts\GhostAI.cs	/^    public GameObject _pacman, _floor;$/;"	f	class:GhostAI
_last_key	.\Assets\Scripts\PlayerController.cs	/^	private KeyCode _last_key;$/;"	f	class:PlayerController	file:
_manager	.\Assets\Scripts\NodeScorer.cs	/^    private GridManager _manager;$/;"	f	class:NodeScorer	file:
_max_bob	.\Assets\Scripts\Hover.cs	/^    public float _max_bob;$/;"	f	class:Hover
_movement_script	.\Assets\Scripts\GhostAI.cs	/^    private Movement _movement_script;$/;"	f	class:GhostAI	file:
_movement_script	.\Assets\Scripts\PacManAI.cs	/^    private Movement _movement_script;$/;"	f	class:PacManAI	file:
_movement_script	.\Assets\Scripts\PlayerController.cs	/^    private Movement _movement_script;$/;"	f	class:PlayerController	file:
_pacman	.\Assets\Scripts\GhostAI.cs	/^    public GameObject _pacman, _floor;$/;"	f	class:GhostAI
_pacman	.\Assets\Scripts\Startup.cs	/^    public GameObject _pacman;$/;"	f	class:Startup
_pass	.\Assets\Scripts\CollabCell.cs	/^    public bool _pass = true;$/;"	f	class:CollabCell
_passable	.\Assets\Scripts\CellPassthrough.cs	/^    private bool _passable = true;$/;"	f	class:CellPassthrough	file:
_player	.\Assets\Scripts\PacManAI.cs	/^    public GameObject _player;$/;"	f	class:PacManAI
_score	.\Assets\Scripts\CollabCell.cs	/^    public int _score = MIN_SCORE;$/;"	f	class:CollabCell
_speed	.\Assets\Scripts\GhostAI.cs	/^    public float _speed;$/;"	f	class:GhostAI
_speed	.\Assets\Scripts\PacManAI.cs	/^    public float _speed;$/;"	f	class:PacManAI
_speed	.\Assets\Scripts\PlayerController.cs	/^	public float _speed;$/;"	f	class:PlayerController
_state	.\Assets\Scripts\PacManAI.cs	/^    private State _state;$/;"	f	class:PacManAI	file:
_target	.\Assets\Scripts\NodeScorer.cs	/^    public GameObject _target;$/;"	f	class:NodeScorer
_up	.\Assets\Scripts\Hover.cs	/^    private bool _up;$/;"	f	class:Hover	file:
_win_text	.\Assets\Scripts\PlayerController.cs	/^	public GUIText _count_text, _win_text;$/;"	f	class:PlayerController
calcGridSize	.\Assets\Scripts\GridManager.cs	/^    Vector2 calcGridSize()$/;"	m	class:GridManager	file:
calcInitPos	.\Assets\Scripts\GridManager.cs	/^    Vector3 calcInitPos()$/;"	m	class:GridManager	file:
calcWorldCoord	.\Assets\Scripts\GridManager.cs	/^    Vector3 calcWorldCoord(Vector2 gridPos)$/;"	m	class:GridManager	file:
cellHeight	.\Assets\Scripts\GridManager.cs	/^    private float cellHeight;$/;"	f	class:GridManager	file:
cellWidth	.\Assets\Scripts\GridManager.cs	/^    private float cellWidth;$/;"	f	class:GridManager	file:
createGrid	.\Assets\Scripts\GridManager.cs	/^    void createGrid()$/;"	m	class:GridManager	file:
first	.\Assets\Scripts\Pair.cs	/^    public K first;$/;"	f	class:Pair
frequency	.\Assets\Scripts\WallToggle.cs	/^    public int frequency;$/;"	f	class:WallToggle
groundHeight	.\Assets\Scripts\GridManager.cs	/^    private float groundHeight;$/;"	f	class:GridManager	file:
groundWidth	.\Assets\Scripts\GridManager.cs	/^    private float groundWidth;$/;"	f	class:GridManager	file:
height	.\Assets\Scripts\Startup.cs	/^    public float height;$/;"	f	class:Startup
min_distance	.\Assets\Scripts\WallToggle.cs	/^    private float min_distance;$/;"	f	class:WallToggle	file:
offset	.\Assets\Scripts\CameraController.cs	/^	private Vector3 offset;$/;"	f	class:CameraController	file:
player	.\Assets\Scripts\CameraController.cs	/^	public GameObject player;$/;"	f	class:CameraController
player	.\Assets\Scripts\WallToggle.cs	/^    public GameObject player, wall;$/;"	f	class:WallToggle
second	.\Assets\Scripts\Pair.cs	/^    public T second;$/;"	f	class:Pair
setSizes	.\Assets\Scripts\GridManager.cs	/^    void setSizes()$/;"	m	class:GridManager	file:
timer	.\Assets\Scripts\WallToggle.cs	/^    private int timer;$/;"	f	class:WallToggle	file:
toggler	.\Assets\Scripts\WallToggle.cs	/^    public bool toggler;$/;"	f	class:WallToggle
vertexList	.\Assets\Scripts\Startup.cs	/^    public Vector3[] vertexList;$/;"	f	class:Startup
wall	.\Assets\Scripts\WallToggle.cs	/^    public GameObject player, wall;$/;"	f	class:WallToggle
